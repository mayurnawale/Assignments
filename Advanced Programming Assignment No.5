1)
def f(in_num):
    output = [8,2]
    print(f'f({in_num})➞ {output[in_num&1]}')
f(1)
f(2)
f(3)

2)
def majority_vote(in_list):
    out_list = None
    for ele in set(in_list):
        if in_list.count(ele) > (len(in_list)/2):
            out_list = ele
    print(f'majority_vote({in_list}) ➞ {out_list}')
majority_vote(["A", "A", "B"])
majority_vote(["A", "A", "A", "B", "C", "A"])
majority_vote(["A", "B", "B", "A", "C", "C"])

3)
def censor_string(in_string_1, in_string_2, rep_char):
    out_string = []
    for ele in in_string_1.split():
        if ele.title() in in_string_2 or ele.lower() in in_string_2 or ele.upper() in in_string_2:
            out_string.append(rep_char*len(ele))
        else:
            out_string.append(ele)
    print(f'censor_string({in_string_1}) ➞ {" ".join(out_string)}')
censor_string("Today is a Wednesday!", ["Today", "a"], "-")
censor_string("The cow jumped over the moon.", ["cow", "over"], "*")
censor_string("Why did the chicken cross the road ?", ["Did", "chicken", "road"], "*")

4)
def is_polydivisible(in_num):
    output = False
    in_num_temp = str(in_num)
    for ele in range(len(in_num_temp)):
        if(int(in_num_temp[:ele+1])%(ele+1) == 0):
            output = True
        else:
            output = False
            break
    print(f'is_polydivisible({in_num}) ➞ {output}')
is_polydivisible(1232)
is_polydivisible(123220)

5)
def sum_primes(in_list):
    out_string = []
    for ele in in_list:
        if ele in [2,3]:
            out_string.append(ele)
        elif ele in [6*n-1 for n in range(0,ele)] or ele in [6*n+1 for n in range(0,ele)]:
            out_string.append(ele)
    if 1 in out_string:
        out_string.remove(1)
    print(f'sum_prices({in_list}) ➞ {sum(out_string) if len(out_string) > 0 else None}')
sum_primes([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
sum_primes([2, 3, 4, 11, 20, 50, 71])
sum_primes([])